{
    "swagger": "2.0",
    "info": {
        "description": "TurnOnline.biz Ecosystem: Publisher & Content Engine microservice responsible for the content preparation and make it available for a third-parties.",
        "version": "1.0",
        "title": "Publisher & Content Engine",
        "contact": {}
    },
    "host": "${env.ENDPOINTS_SERVICE_NAME}",
    "basePath": "/api/publisher",
    "tags": [
        {
            "name": "Emailing"
        },
        {
            "name": "Content Engine"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1/owners/{login_id}/invoices/{name}": {
            "delete": {
                "tags": [
                    "Content Engine"
                ],
                "operationId": "PublisherDeletePayInvoiceContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The unique name of the invoice content.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The confirmation, the resource has been deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        },
        "/v1/owners/{login_id}/products/{name}": {
            "delete": {
                "tags": [
                    "Content Engine"
                ],
                "operationId": "PublisherDeleteProductContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The unique name of the product content.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The confirmation, the resource has been deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        },
        "/v1/owners/{login_id}/templates/{name}/mails": {
            "post": {
                "tags": [
                    "Emailing"
                ],
                "summary": "Sends email by template",
                "description": "Sends the requested template populated with user specific data as an email.",
                "operationId": "sendEmailByTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the content template to be populated. Case insensitive.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ACCOUNT_SIGN_UP",
                            "EVENT",
                            "ISSUED_INVOICE"
                        ],
                        "x-example": "ISSUED_INVOICE"
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "The identification of the Order within Product Billing service to work with.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 3424795823137714
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "The identification of the Invoice within Product Billing service to work with. To identify a concrete invoice, the order_id is being required to be provided as well.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 4533986732228623
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The preferred language of the email. If not specified the owner's locale will be used. Must be from the supported list of the languages, otherwise bad request will be returned.",
                        "required": false,
                        "type": "string",
                        "x-example": "en_GB"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmailPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The confirmation the email has been queued to be sent.",
                        "schema": {
                            "$ref": "#/definitions/EmailId"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to send an email with template that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "firebase-a9a2a51a": {
            "type": "oauth2",
            "authorizationUrl": "",
            "flow": "implicit",
            "x-google-issuer": "https://securetoken.google.com/turn-online-eu",
            "x-google-jwks_uri": "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
            "x-google-audiences": "turn-online-eu"
        }
    },
    "definitions": {
        "EmailPayload": {
            "type": "object",
            "properties": {
                "recipients": {
                    "description": "The list of recipients who should receive an individual email message.",
                    "$ref": "#/definitions/EmailRecipients"
                },
                "from": {
                    "description": "The email sender description.",
                    "$ref": "#/definitions/EmailFrom"
                },
                "replyTo": {
                    "description": "The property to indicate an email address other than the 'from' address to use to reply to the message.",
                    "$ref": "#/definitions/EmailReplyTo"
                },
                "subject": {
                    "type": "string",
                    "description": "The email subject."
                },
                "content": {
                    "description": "The email message.",
                    "$ref": "#/definitions/EmailPayloadContent"
                }
            },
            "description": "The definition of the email recipients and content to be sent. The field's duty depends on the specific template. For some templates it might be an empty JSON {} as well."
        },
        "EmailFrom": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the sender."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person who is sending the email message."
                }
            },
            "description": "The email sender description."
        },
        "EmailRecipient": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The recipient email."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person who is the owner of the email address."
                }
            },
            "description": "The email recipient profile."
        },
        "EmailRecipients": {
            "type": "object",
            "properties": {
                "to": {
                    "type": "array",
                    "description": "The recipients to whom you are sending an email.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                },
                "cc": {
                    "type": "array",
                    "description": "The recipients who will get copy of the email message.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                },
                "bcc": {
                    "type": "array",
                    "description": "The recipients who will get blind copy of the email message.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                }
            },
            "description": "The list of recipients who should receive an individual email message."
        },
        "EmailReplyTo": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person."
                }
            },
            "description": "The property to indicate an email address other than the 'from' address to use to reply to the message."
        },
        "EmailPayloadContent": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The message content type."
                },
                "body": {
                    "type": "string",
                    "description": "The email body."
                }
            },
            "description": "The email message."
        },
        "EmailId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The unique reference of the sent Email."
                }
            },
            "description": "Identification of the Email that has been requested to be sent."
        },
        "ContentOwner": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The unique identification of the owner account (same to login_id)."
                },
                "email": {
                    "type": "string",
                    "description": "The current email associated with the owner account."
                },
                "analyticsAccount": {
                    "type": "string"
                },
                "businessName": {
                    "type": "string"
                },
                "legalForm": {
                    "type": "string",
                    "description": "The company legal form."
                },
                "city": {
                    "type": "string"
                },
                "companyId": {
                    "type": "string"
                },
                "contactEmail": {
                    "type": "string",
                    "description": "The company business email address considered as a contact email used for notification purposes related to this owner (supports comma separated list).\n\nIf it’s not provided, the owner’s email will be used by default."
                },
                "contactWebSite": {
                    "type": "string",
                    "description": "The public company contact website of the account."
                },
                "country": {
                    "type": "string",
                    "description": "The company ISO 3166 alpha-2 country code. It’s case insensitive."
                },
                "domain": {
                    "type": "string"
                },
                "domicile": {
                    "type": "string",
                    "description": "The company ISO 3166 alpha-2 country code. It's case insensitive. Technically it's same as countryCode but the supported list is limited."
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "headerDescription": {
                    "type": "string"
                },
                "headerKeywords": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "locale": {
                    "type": "string",
                    "description": "The default owner locale, ISO 639 alpha-2 or alpha-3 language code."
                },
                "logoUrl": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "paymentLink": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "subscriberAppId": {
                    "type": "string"
                },
                "supportedLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taxId": {
                    "type": "string"
                },
                "vatId": {
                    "type": "string"
                },
                "vatPayer": {
                    "type": "boolean",
                    "default": false
                },
                "postcode": {
                    "type": "string",
                    "description": "The company postal code."
                }
            }
        },
        "EventContent": {
            "type": "object",
            "properties": {
                "begin": {
                    "description": "The event start day definition.",
                    "$ref": "#/definitions/EventContent_Begin"
                },
                "end": {
                    "description": "The event last day definition.",
                    "$ref": "#/definitions/EventContent_End"
                },
                "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last day to register. If not provided, the one day before begin.on will be set."
                },
                "seats": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seats available for sale."
                },
                "location": {
                    "description": "An address where event will take place.",
                    "$ref": "#/definitions/EventLocation"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventPart"
                    }
                }
            },
            "description": "The event as a product definition extension."
        },
        "EventLocation": {
            "type": "object",
            "properties": {
                "placeName": {
                    "type": "string",
                    "description": "The event place name or very short description."
                },
                "street": {
                    "type": "string",
                    "description": "The event place street and street number."
                },
                "city": {
                    "type": "string",
                    "description": "The event place city."
                },
                "country": {
                    "type": "string",
                    "description": "The event place ISO 3166 alpha-2 country code. It’s case insensitive."
                },
                "postcode": {
                    "type": "string",
                    "description": "The event place post code."
                },
                "infoEmail": {
                    "type": "string",
                    "description": "The contact email in order to provide more information regarding event."
                },
                "infoPhone": {
                    "type": "string",
                    "description": "The contact phone in order to provide more information regarding event."
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "The event place address latitude geographic coordinate."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "The event place address longitude geographic coordinate."
                }
            }
        },
        "EventPart": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The event part title."
                },
                "description": {
                    "type": "string",
                    "description": "The event part description."
                },
                "priceExclVat": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of this part excluding VAT."
                },
                "finalPrice": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of this part including VAT."
                },
                "order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Chronological order of parts of the event that follow one another."
                }
            }
        },
        "PayInvoiceContent": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "applyReverseChargeText": {
                    "type": "string"
                },
                "constantSymbol": {
                    "type": "string"
                },
                "locale": {
                    "type": "string",
                    "description": "The content locale, ISO 639 alpha-2 or alpha-3 language code."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency code based on the ISO 4217."
                },
                "hashCode": {
                    "type": "string"
                },
                "headerDescription": {
                    "type": "string"
                },
                "headerKeywords": {
                    "type": "string"
                },
                "invoiceImageUrl": {
                    "type": "string"
                },
                "invoiceKey": {
                    "type": "string"
                },
                "issuedFor": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The unique identification of the account that has been invoiced. The missing value means there is no association with an account at TurnOnline.biz Ecosystem."
                },
                "amountPay": {
                    "type": "number",
                    "format": "double",
                    "description": "The remaining amount to pay out the invoice. It will have a zero value once invoice is fully settled."
                },
                "totalPrice": {
                    "type": "number",
                    "format": "double"
                },
                "totalPriceExclVat": {
                    "type": "number",
                    "format": "double"
                },
                "variableSymbol": {
                    "type": "string"
                },
                "paymentKey": {
                    "type": "string",
                    "description": "The payment key as an ID to identify incoming payment related to this invoice. Might be generated at the client side. It may be the same value as the variable symbol, but not necessarily."
                }
            }
        },
        "JsonMap": {},
        "ProductContent": {
            "type": "object",
            "properties": {
                "altFinalPrice": {
                    "type": "number",
                    "format": "double"
                },
                "altFinalPriceExclVat": {
                    "type": "number",
                    "format": "double"
                },
                "altPrice": {
                    "type": "boolean",
                    "default": false
                },
                "comingSoon": {
                    "type": "boolean",
                    "default": false
                },
                "locale": {
                    "type": "string",
                    "description": "The content locale, ISO 639 alpha-2 or alpha-3 language code."
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number",
                    "format": "double",
                    "description": "The final price including VAT."
                },
                "finalPriceExclVat": {
                    "type": "number",
                    "format": "double",
                    "description": "The final price excluding VAT."
                },
                "currency": {
                    "type": "string",
                    "description": "The item currency code based on the ISO 4217."
                },
                "headerDescription": {
                    "type": "string"
                },
                "headerKeywords": {
                    "type": "string"
                },
                "imageLegend": {
                    "type": "string"
                },
                "imageTitle": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "snippet": {
                    "type": "string"
                },
                "subsidiary": {
                    "description": "An optional subsidiary properties of the product. An arbitrary map of values in JSON structure that are owner specific.",
                    "$ref": "#/definitions/JsonMap"
                },
                "url": {
                    "type": "string"
                },
                "event": {
                    "description": "The product extension by event specification.",
                    "$ref": "#/definitions/EventContent"
                }
            }
        },
        "TermsContent": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "locale": {
                    "type": "string",
                    "description": "The content locale, ISO 639 alpha-2 or alpha-3 language code."
                },
                "fullTerms": {
                    "type": "string"
                },
                "headerDescription": {
                    "type": "string"
                },
                "headerKeywords": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The HTTP status code"
                },
                "message": {
                    "type": "string",
                    "description": "The error message"
                }
            }
        },
        "EventContent_Begin": {
            "type": "object",
            "properties": {
                "show": {
                    "type": "boolean",
                    "description": "The boolean indication whether to publish (if defined) From - To time or not.",
                    "default": true
                },
                "on": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The event start date."
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The event start time."
                },
                "to": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The event end time of the 1st day."
                }
            }
        },
        "EventContent_End": {
            "type": "object",
            "properties": {
                "show": {
                    "type": "boolean",
                    "description": "The boolean indication whether to publish (if defined) From - To time or not.",
                    "default": false
                },
                "on": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The event end date."
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The event start time of the last day."
                },
                "to": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The event end time."
                }
            }
        }
    }
}