{
    "swagger": "2.0",
    "info": {
        "description": "TurnOnline.biz Ecosystem: Publisher & Content Engine microservice responsible for the content preparation and make it available for a third-parties.",
        "version": "1.0",
        "title": "Publisher & Content Engine",
        "contact": {}
    },
    "host": "${env.ENDPOINTS_SERVICE_NAME}",
    "basePath": "/api/publisher",
    "tags": [
        {
            "name": "Emailing"
        },
        {
            "name": "Content Engine"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1/owners/{login_id}/invoices/{name}": {
            "delete": {
                "tags": [
                    "Content Engine"
                ],
                "operationId": "PublisherDeletePayInvoiceContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The unique name of the invoice content.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The confirmation, the resource has been deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        },
        "/v1/owners/{login_id}/products/{name}": {
            "delete": {
                "tags": [
                    "Content Engine"
                ],
                "operationId": "PublisherDeleteProductContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The unique name of the product content.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The confirmation, the resource has been deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        },
        "/v1/owners/{login_id}/templates/{name}/mails": {
            "post": {
                "tags": [
                    "Emailing"
                ],
                "summary": "Sends email by template",
                "description": "Sends the requested template populated with user specific data as an email.",
                "operationId": "sendEmailByTemplate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login_id",
                        "in": "path",
                        "description": "The identification of the account.",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 2244996655227766
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the content template to be populated. Case insensitive.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "ACCOUNT_SIGN_UP",
                            "EVENT",
                            "ISSUED_INVOICE",
                            "PURCHASE_SUMMARY"
                        ],
                        "x-example": "ISSUED_INVOICE"
                    },
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "The identification of the Order within Product Billing service to work with.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 3424795823137714
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "The identification of the Invoice within Product Billing service to work with. To identify a concrete invoice, the order_id is being required to be provided as well.",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 4533986732228623
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The preferred language of the email. If not specified the owner's locale will be used. Must be from the supported list of the languages, otherwise bad request will be returned.",
                        "required": false,
                        "type": "string",
                        "x-example": "en_GB"
                    },
                    {
                        "name": "Vnd-ConnecSys-Request-Hashcode",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "description": "The unique hash code associated with this request. If present, it helps to avoid double submission of the same request."
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmailPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The confirmation the email has been queued to be sent.",
                        "schema": {
                            "$ref": "#/definitions/EmailId"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "The error when client tries to send an email with template that doesn't exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "description": "The service is unavailable or server timed out processing of the request. The client may repeat the request without modifications at any later time.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "firebase-a9a2a51a": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "firebase-a9a2a51a": {
            "type": "oauth2",
            "authorizationUrl": "",
            "flow": "implicit",
            "x-google-issuer": "https://securetoken.google.com/${env.TOKEN_ISSUER}",
            "x-google-jwks_uri": "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com",
            "x-google-audiences": "${env.TOKEN_ISSUER}"
        }
    },
    "definitions": {
        "EmailPayload": {
            "type": "object",
            "properties": {
                "recipients": {
                    "description": "The list of recipients who should receive an individual email message.",
                    "$ref": "#/definitions/EmailRecipients"
                },
                "from": {
                    "description": "The email sender description.",
                    "$ref": "#/definitions/EmailFrom"
                },
                "replyTo": {
                    "description": "The property to indicate an email address other than the 'from' address to use to reply to the message.",
                    "$ref": "#/definitions/EmailReplyTo"
                },
                "subject": {
                    "type": "string",
                    "description": "The email subject."
                },
                "content": {
                    "description": "The email message.",
                    "$ref": "#/definitions/EmailPayloadContent"
                }
            },
            "description": "The definition of the email recipients and content to be sent. The field's duty depends on the specific template. For some templates it might be an empty JSON {} as well."
        },
        "EmailFrom": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the sender."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person who is sending the email message."
                }
            },
            "description": "The email sender description."
        },
        "EmailRecipient": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The recipient email."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person who is the owner of the email address."
                }
            },
            "description": "The email recipient profile."
        },
        "EmailRecipients": {
            "type": "object",
            "properties": {
                "to": {
                    "type": "array",
                    "description": "The recipients to whom you are sending an email.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                },
                "cc": {
                    "type": "array",
                    "description": "The recipients who will get copy of the email message.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                },
                "bcc": {
                    "type": "array",
                    "description": "The recipients who will get blind copy of the email message.",
                    "items": {
                        "$ref": "#/definitions/EmailRecipient"
                    }
                }
            },
            "description": "The list of recipients who should receive an individual email message."
        },
        "EmailReplyTo": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the person."
                }
            },
            "description": "The property to indicate an email address other than the 'from' address to use to reply to the message."
        },
        "EmailPayloadContent": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The message content type."
                },
                "body": {
                    "type": "string",
                    "description": "The email body."
                }
            },
            "description": "The email message."
        },
        "EmailId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The unique reference of the sent Email."
                }
            },
            "description": "Identification of the Email that has been requested to be sent."
        },
        "Error": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "description": "Error body wrapper.",
                    "$ref": "#/definitions/ErrorBody"
                }
            }
        },
        "ErrorBody": {
            "type": "object",
            "required": [
                "code",
                "errors",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The HTTP status code."
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorReason"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "The error message."
                }
            }
        },
        "ErrorReason": {
            "type": "object",
            "required": [
                "domain",
                "message",
                "reason"
            ],
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The overall scope of the error message."
                },
                "message": {
                    "type": "string",
                    "description": "The detailed error message."
                },
                "reason": {
                    "type": "string",
                    "description": "The error reason (error key)."
                }
            }
        }
    }
}